struct DSU{
	vector<int> rnk;
	vector<int> parent;
	/*!! our dsu is 0 indexed , make sure problem statement is converted zero indexed!! */
	void init(int n){
		rnk.assign(n,0);
		parent.assign(n,0);
		for(int i=0;i<n;i++)
			parent[i] = i;
	}

	int find(int x, bool ENALBE_PATH_COMPR = true){
		if(parent[x] == x) return x;
		if(ENALBE_PATH_COMPR)
			return parent[x] = find(parent[x]);
		else 
			return find(parent[x]);
	}
	void unite(int u, int v, bool ENABLE_UNION_BY_RANK = true){
		u = find(u);
		v = find(v);
		if(u == v) return;
		if(ENABLE_UNION_BY_RANK && rnk[u]<rnk[v])
			swap(u,v);
		parent[v] = u;
		if(rnk[u] == rnk[v])
			rnk[u]++;
	}
};
